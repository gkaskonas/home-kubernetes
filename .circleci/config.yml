version: 2.1
jobs:
  validate:
    docker:
      - image: garethr/kubeval
    working_directory: /tmp/workspace/kubernetes
    steps:
      - checkout
      # - run:
      #     name: Validate cert-manager manifests
      #     command: kubeval -d /tmp/workspace/kubernetes/cert-manager/
      - run:
          name: Validate emby manifests
          command: kubeval -d /tmp/workspace/kubernetes/emby/
      - run:
          name: Validate kubernetes-dashborad manifests
          command: kubeval -d /tmp/workspace/kubernetes/kubernetes-dashboard/
      - run:
          name: Validate nexus manifests
          command: kubeval -d /tmp/workspace/kubernetes/nexus/
      - run:
          name: Validate nextcloud manifests
          command: kubeval -d /tmp/workspace/kubernetes/nextcloud/
  deploy-kubernetes:
    docker:
      - image: devth/helm:latest
    environment:
      KUBECONFIG: /kubeconfig
    steps:
      - checkout
      # - run:
      #     command: apk --no-cache add curl
      # - run:
      #     name: install kubectl
      #     command: curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl
      - run:
          name: set up kubeconfig
          command: |
            echo $KUBECONFIG_FILE | base64 -d >> /kubeconfig
      - run:
          name: set up helm
          command: |
            helm repo add stable https://kubernetes-charts.storage.googleapis.com
            helm repo add jetstack https://charts.jetstack.io
            helm repo add bananaspliff/transmission-openvpn
            helm repo update
      - run:
          name: install metallb
          command: |
            helm upgrade metallb stable/metallb --namespace kube-system --set configInline.address-pools[0].name=default --set configInline.address-pools[0].protocol=layer2 --set configInline.address-pools[0].addresses[0]=192.168.0.240-192.168.0.250  --install 
            sleep 10s
      - run:
          name: install nginx
          command: |
            helm upgrade nginx-ingress stable/nginx-ingress --namespace kube-system --set defaultBackend.enabled=false --install
            sleep 10s
      # - run:
      #     name: install cert-manager
      #     command: |
      #       kubectl apply -f cert-manager/namespace.yaml
      #       kubectl apply -f cert-manager/
      #       helm upgrade cert-manager jetstack/cert-manager --namespace cert-manager --version 0.16.0
      #       sleep 10s
      - run:
          name: install nextcloud
          command: |
            sed -i 's/DOMAIN_TEMPLATE/'$DOMAIN'/g' nextcloud/ingress.yaml
            sed -i 's/DOMAIN_TEMPLATE/'$DOMAIN'/g' helm_values/nextcloud.values.yaml
            sed -i 's/NEXTCLOUD_PASSWORD/'$NEXTCLOUD_PASSWORD'/g' helm_values/nextcloud.values.yaml
            kubectl apply -f nextcloud/namespace.yaml
            kubectl apply -f nextcloud/
            helm upgrade nextcloud stable/nextcloud --namespace nextcloud --values helm_values/nextcloud.values.yaml --install
            sleep 10s
      - run:
          name: install kubernetes-dashboard
            sed -i 's/DOMAIN_TEMPLATE/'$DOMAIN'/g' kubernetes-dashboard/ingress.yaml
          command: kubectl apply -f kubernetes-dashboard/ -n kubernetes-dashboard
      - run:
          name: install transmission
          command: |
            sed -i 's/NORDVPN_PASSWORD/'$NORDVPN_PASSWORD'/g' transmission/nordvpn-creds.yaml
            sed -i 's/DOMAIN_TEMPLATE/'$DOMAIN'/g' transmission/ingress.yaml
            kubectl apply -f transmission/namespace.yaml
            kubectl apply -f transmission/ -n transmission
            helm upgrade transmission bananaspliff/transmission-openvpn --values helm_values/transmission-openvpn.values.yml --namespace transmission --install
            sleep 10s
      - run:
          name: install emby
          command: |
            kubectl apply -f emby/namespace.yaml -n emby
            sed -i 's/DOMAIN_TEMPLATE/'$DOMAIN'/g' emby/ingress.yaml
            kubectl apply -f emby/ -n emby

workflows:
  version: 2.1
  validate:
    jobs:
      - validate
      - deploy-kubernetes:
          requires:
            - validate
          filters:
            branches:
              only: master
        
