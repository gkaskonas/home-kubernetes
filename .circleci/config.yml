version: 2.1
jobs:
  validate-kubernetes-manifests:
    docker:
      - image: garethr/kubeval
    working_directory: /tmp/workspace/kubernetes
    steps:
      - checkout
      # For some reason this keeps failing
      # - run:
      #     name: Validate cert-manager manifests
      #     command: kubeval -d /tmp/workspace/kubernetes/cert-manager/
      - run:
          name: Validate emby manifests
          command: kubeval -d /tmp/workspace/kubernetes/emby/
      - run:
          name: Validate kubernetes-dashborad manifests
          command: kubeval -d /tmp/workspace/kubernetes/kubernetes-dashboard/
      - run:
          name: Validate nexus manifests
          command: kubeval -d /tmp/workspace/kubernetes/nexus/
      - run:
          name: Validate nextcloud manifests
          command: kubeval -d /tmp/workspace/kubernetes/nextcloud/
      - run:
          name: Validate redis manifests
          command: kubeval -d /tmp/workspace/kubernetes/redis/
      - run:
          name: Validate mariadb manifests
          command: kubeval -d /tmp/workspace/kubernetes/mariadb/
      - run:
          name: Validate metallb manifests
          command: kubeval -d /tmp/workspace/kubernetes/metallb/
      - run:
          name: Validate nginx-ingress manifests
          command: kubeval -d /tmp/workspace/kubernetes/nginx-ingress/
      - run:
          name: Validate transmission manifests
          command: kubeval -d /tmp/workspace/kubernetes/transmission/
      - run:
          name: Validate bitwarden manifests
          command: kubeval -d /tmp/workspace/kubernetes/bitwarden/
  deploy-kubernetes:
    docker:
      - image: devth/helm:latest
    environment:
      KUBECONFIG: /kubeconfig
    steps:
      - checkout
      # - run:
      #     command: apk --no-cache add curl
      # - run:
      #     name: install kubectl
      #     command: curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl
      - run:
          name: set up kubeconfig
          command: |
            echo $KUBECONFIG_FILE | base64 -d >> /kubeconfig
      - run:
          name: install metallb
          command: |
            kubectl apply -f metallb/namespace.yaml
            kubectl apply -f metallb/
      - run:
          name: install nginx-ingress
          command: |
            kubectl apply -f nginx-ingress/namespace.yaml
            kubectl apply -f nginx-ingress/
      - run:
          name: install nexus
          command: |
            kubectl apply -f nexus/namespace.yaml -n nexus
            sed -i 's/DOMAIN_TEMPLATE/'$DOMAIN'/g' nexus/ingress.yaml
            kubectl apply -f nexus/ -n nexus
      # - run:
      #     name: install cert-manager
      #     command: |
      #       kubectl apply -f cert-manager/namespace.yaml
      #       kubectl apply -f cert-manager/
      - run:
          name: install nextcloud
          command: |
            sed -i 's/DOMAIN_TEMPLATE/'$DOMAIN'/g' nextcloud/ingress.yaml
            sed -i 's/DOMAIN_TEMPLATE/'$DOMAIN'/g' nextcloud/nextcloud.deployment.yaml
            sed -i 's/NEXTCLOUD_PASSWORD/'$NEXTCLOUD_PASSWORD'/g' nextcloud/secrets.yaml
            sed -i 's/REDIS_PASSWORD_CLIENT/'$REDIS_PASSWORD_CLIENT'/g' nextcloud/secrets.yaml
            kubectl apply -f nextcloud/namespace.yaml
            kubectl apply -f nextcloud/
            sleep 10s
      - run:
          name: install redis
          command: |
            sed -i 's/REDIS_CONFIG/'$REDIS_CONFIG'/g' redis/redis.yaml
            kubectl apply -f redis/
            sleep 10s
      - run:
          name: install mysql
          command: |
            sed -i 's/SQL_ROOT_PASSWORD/'$SQL_ROOT_PASSWORD'/g' mariadb/secret.yaml
            kubectl apply -f mariadb/
            sleep 10s
      - run:
          name: install kubernetes-dashboard
          command: |
            sed -i 's/DOMAIN_TEMPLATE/'$DOMAIN'/g' kubernetes-dashboard/ingress.yaml
            kubectl apply -f kubernetes-dashboard/ -n kubernetes-dashboard
      - run:
          name: install transmission
          command: |
            sed -i 's/NORDVPN_PASSWORD/'$NORDVPN_PASSWORD'/g' transmission/nordvpn-creds.yaml
            sed -i 's/DOMAIN_TEMPLATE/'$DOMAIN'/g' transmission/ingress.yaml
            kubectl apply -f transmission/namespace.yaml
            kubectl apply -f transmission/ -n transmission
            sleep 10s
      - run:
          name: install emby
          command: |
            kubectl apply -f emby/namespace.yaml -n emby
            sed -i 's/DOMAIN_TEMPLATE/'$DOMAIN'/g' emby/ingress.yaml
            kubectl apply -f emby/ -n emby
      - run:
          name: install jellyfin
          command: |
            kubectl apply -f jellyfin/namespace.yaml -n jellyfin
            sed -i 's/DOMAIN_TEMPLATE/'$DOMAIN'/g' jellyfin/ingress.yaml
            kubectl apply -f jellyfin/ -n jellyfin
      - run:
          name: install bitwarden
          command: |
            sed -i 's/BITWARDEN_ADMIN_PASSWORD/'$BITWARDEN_ADMIN_PASSWORD'/g' bitwarden/deployment.yaml
            sed -i 's/DOMAIN_TEMPLATE/'$DOMAIN'/g' bitwarden/ingress.yaml
            sed -i 's/DOMAIN_TEMPLATE/'$DOMAIN'/g' bitwarden/deployment.yaml
            kubectl apply -f bitwarden/namespace.yaml
            kubectl apply -f bitwarden/ -n bitwarden
      - run:
          name: install pihole
          command: |
            sed -i 's/PIHOLE_ADMIN_PASSWORD/'$PIHOLE_ADMIN_PASSWORD'/g' pihole/secret.yaml
            kubectl apply -f pihole/namespace.yaml
            kubectl apply -f pihole/ -n pihole
workflows:
  version: 2.1
  validate:
    jobs:
      - validate-kubernetes-manifests
      - deploy-kubernetes:
          requires:
            - validate-kubernetes-manifests
          filters:
            branches:
              only: master
